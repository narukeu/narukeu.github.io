import{_ as i,c as a,o as n,af as e}from"./chunks/framework.8GrsvcDK.js";const o=JSON.parse('{"title":"使用 Systemd 服务防止 USB 硬盘自动休眠","description":"","frontmatter":{},"headers":[],"relativePath":"articles/linux-keep-usb-alive.md","filePath":"articles/linux-keep-usb-alive.md","lastUpdated":1755893690000}'),l={name:"articles/linux-keep-usb-alive.md"};function t(p,s,h,k,d,r){return n(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="使用-systemd-服务防止-usb-硬盘自动休眠" tabindex="-1">使用 Systemd 服务防止 USB 硬盘自动休眠 <a class="header-anchor" href="#使用-systemd-服务防止-usb-硬盘自动休眠" aria-label="Permalink to &quot;使用 Systemd 服务防止 USB 硬盘自动休眠&quot;">​</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><p>由于很多 USB 移动硬盘的节能策略，长时间不读写就会休眠，再次访问时会有几秒钟的延迟甚至访问失败。这对于用作<code>迷你主机服务器 + USB 硬盘</code>的场景是不有好的。</p><h2 id="为什么将这个做成-systemd-服务" tabindex="-1">为什么将这个做成 Systemd 服务？ <a class="header-anchor" href="#为什么将这个做成-systemd-服务" aria-label="Permalink to &quot;为什么将这个做成 Systemd 服务？&quot;">​</a></h2><p>最简单的方案是 <code>crontab</code> 定时任务。但是 <code>systemd</code> 具备以下有点：</p><ul><li><code>systemd</code> 现在是绝大多数发行版的默认 <code>init</code>，用起来比较习惯</li><li><code>systemd</code> 可以做成服务开机自启，比较省心</li><li>而且使用 <code>systemd</code> 做成服务的话排错也比较容易。</li></ul><h2 id="第一步-创建防休眠脚本" tabindex="-1">第一步：创建防休眠脚本 <a class="header-anchor" href="#第一步-创建防休眠脚本" aria-label="Permalink to &quot;第一步：创建防休眠脚本&quot;">​</a></h2><p>这个脚本会循环执行，检查目标文件是否存在，然后读取它。它包含了基础的错误处理和日志记录。</p><p>我们假设需要读取的硬盘已经被挂载到了 <code>/srv</code> 下面。</p><p><code>/usr/local/bin/keepalive.sh</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置挂载目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mountDir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/srv&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志函数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">date</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;+%Y-%m-%d %H:%M:%S&#39;) [USB-Keepalive] </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> logger</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usb-keepalive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 主循环函数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main_loop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    log_message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;INFO: Starting USB keepalive service&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 检查挂载目录是否存在</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$mountDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            log_message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ERROR: Target directory </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$mountDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> does not exist. Sleeping.&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 180</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            continue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 确保 .keepalive 文件存在</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$mountDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.keepalive&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;keepalive&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$mountDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.keepalive&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 尝试读取文件并同步，以确保产生 I/O</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$mountDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.keepalive&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> 2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            log_message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;DEBUG: Successfully accessed </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$mountDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.keepalive&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        else</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            log_message</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;WARNING: Failed to access </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$mountDir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.keepalive&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 等待3分钟</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        sleep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 180</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    done</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main_loop</span></span></code></pre></div><h3 id="然后赋予它可执行权限" tabindex="-1">然后赋予它可执行权限： <a class="header-anchor" href="#然后赋予它可执行权限" aria-label="Permalink to &quot;然后赋予它可执行权限：&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/keepalive.sh</span></span></code></pre></div><h2 id="第二步-创建-systemd-服务单元" tabindex="-1">第二步：创建 Systemd 服务单元 <a class="header-anchor" href="#第二步-创建-systemd-服务单元" aria-label="Permalink to &quot;第二步：创建 Systemd 服务单元&quot;">​</a></h2><p>这个服务文件告诉 <code>systemd</code> 如何管理我们的脚本。</p><p>创建服务文件 <code>/etc/systemd/system/usb-keepalive.service</code>：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description=USB Disk Keepalive Service</span></span>
<span class="line"><span>After=local-fs.target</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>Type=simple</span></span>
<span class="line"><span>ExecStart=/usr/local/bin/keepalive.sh</span></span>
<span class="line"><span>Restart=always</span></span>
<span class="line"><span>RestartSec=10</span></span>
<span class="line"><span>User=root</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span></code></pre></div><ul><li><code>Restart=always</code>: 保证服务始终运行。</li><li><code>RestartSec=10</code>: 如果服务失败，10秒后重启。</li></ul><h2 id="第三步-启动服务" tabindex="-1">第三步：启动服务 <a class="header-anchor" href="#第三步-启动服务" aria-label="Permalink to &quot;第三步：启动服务&quot;">​</a></h2><p>执行以下命令来重载配置、启用并立即启动服务：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新加载 systemd 管理器配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置服务开机自启动并立即启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usb-keepalive.service</span></span></code></pre></div><h2 id="额外-管理服务" tabindex="-1">额外：管理服务 <a class="header-anchor" href="#额外-管理服务" aria-label="Permalink to &quot;额外：管理服务&quot;">​</a></h2><p>你可以用以下命令来检查和管理你的服务：</p><h3 id="查看状态" tabindex="-1">查看状态 <a class="header-anchor" href="#查看状态" aria-label="Permalink to &quot;查看状态&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usb-keepalive.service</span></span></code></pre></div><h3 id="查看实时日志" tabindex="-1">查看实时日志 <a class="header-anchor" href="#查看实时日志" aria-label="Permalink to &quot;查看实时日志&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> journalctl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usb-keepalive.service</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span></code></pre></div><h3 id="停止服务" tabindex="-1">停止服务 <a class="header-anchor" href="#停止服务" aria-label="Permalink to &quot;停止服务&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usb-keepalive.service</span></span></code></pre></div><h3 id="启动服务" tabindex="-1">启动服务 <a class="header-anchor" href="#启动服务" aria-label="Permalink to &quot;启动服务&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usb-keepalive.service</span></span></code></pre></div>`,31)])])}const F=i(l,[["render",t]]);export{o as __pageData,F as default};
