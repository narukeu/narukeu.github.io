import{_ as n,c as a,o as p,af as l}from"./chunks/framework.8GrsvcDK.js";const m=JSON.parse('{"title":"前端通用 .gitignore","description":"","frontmatter":{},"headers":[],"relativePath":"codes/frontend-gitignore.md","filePath":"codes/frontend-gitignore.md","lastUpdated":1756044141000}'),e={name:"codes/frontend-gitignore.md"};function i(c,s,t,o,r,d){return p(),a("div",null,[...s[0]||(s[0]=[l(`<h1 id="前端通用-gitignore" tabindex="-1">前端通用 <code>.gitignore</code> <a class="header-anchor" href="#前端通用-gitignore" aria-label="Permalink to &quot;前端通用 \`.gitignore\`&quot;">​</a></h1><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Windows thumbnail cache files</span></span>
<span class="line"><span>Thumbs.db</span></span>
<span class="line"><span>Thumbs.db:encryptable</span></span>
<span class="line"><span>ehthumbs.db</span></span>
<span class="line"><span>ehthumbs_vista.db</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Dump file</span></span>
<span class="line"><span>*.stackdump</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Folder config file</span></span>
<span class="line"><span>[Dd]esktop.ini</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Recycle Bin used on file shares</span></span>
<span class="line"><span>$RECYCLE.BIN/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Windows Installer files</span></span>
<span class="line"><span>*.cab</span></span>
<span class="line"><span>*.msi</span></span>
<span class="line"><span>*.msix</span></span>
<span class="line"><span>*.msm</span></span>
<span class="line"><span>*.msp</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Windows shortcuts</span></span>
<span class="line"><span>*.lnk</span></span>
<span class="line"><span></span></span>
<span class="line"><span># General</span></span>
<span class="line"><span>.DS_Store</span></span>
<span class="line"><span>__MACOSX/</span></span>
<span class="line"><span>.AppleDouble</span></span>
<span class="line"><span>.LSOverride</span></span>
<span class="line"><span>Icon[</span></span>
<span class="line"><span>]</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Thumbnails</span></span>
<span class="line"><span>._*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Files that might appear in the root of a volume</span></span>
<span class="line"><span>.DocumentRevisions-V100</span></span>
<span class="line"><span>.fseventsd</span></span>
<span class="line"><span>.Spotlight-V100</span></span>
<span class="line"><span>.TemporaryItems</span></span>
<span class="line"><span>.Trashes</span></span>
<span class="line"><span>.VolumeIcon.icns</span></span>
<span class="line"><span>.com.apple.timemachine.donotpresent</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Directories potentially created on remote AFP share</span></span>
<span class="line"><span>.AppleDB</span></span>
<span class="line"><span>.AppleDesktop</span></span>
<span class="line"><span>Network Trash Folder</span></span>
<span class="line"><span>Temporary Items</span></span>
<span class="line"><span>.apdisk</span></span>
<span class="line"><span></span></span>
<span class="line"><span>*~</span></span>
<span class="line"><span></span></span>
<span class="line"><span># temporary files which can be created if a process still has a handle open of a deleted file</span></span>
<span class="line"><span>.fuse_hidden*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Metadata left by Dolphin file manager, which comes with KDE Plasma</span></span>
<span class="line"><span>.directory</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Linux trash folder which might appear on any partition or disk</span></span>
<span class="line"><span>.Trash-*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># .nfs files are created when an open file is removed but is still being accessed</span></span>
<span class="line"><span>.nfs*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Log files created by default by the nohup command</span></span>
<span class="line"><span>nohup.out</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.vscode/*</span></span>
<span class="line"><span>!.vscode/settings.json</span></span>
<span class="line"><span>!.vscode/tasks.json</span></span>
<span class="line"><span>!.vscode/launch.json</span></span>
<span class="line"><span>!.vscode/extensions.json</span></span>
<span class="line"><span>!.vscode/*.code-snippets</span></span>
<span class="line"><span>!*.code-workspace</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Built Visual Studio Code Extensions</span></span>
<span class="line"><span>*.vsix</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Covers JetBrains IDEs: IntelliJ, GoLand, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider</span></span>
<span class="line"><span># Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839</span></span>
<span class="line"><span></span></span>
<span class="line"><span># User-specific stuff</span></span>
<span class="line"><span>.idea/**/workspace.xml</span></span>
<span class="line"><span>.idea/**/tasks.xml</span></span>
<span class="line"><span>.idea/**/usage.statistics.xml</span></span>
<span class="line"><span>.idea/**/dictionaries</span></span>
<span class="line"><span>.idea/**/shelf</span></span>
<span class="line"><span></span></span>
<span class="line"><span># AWS User-specific</span></span>
<span class="line"><span>.idea/**/aws.xml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Generated files</span></span>
<span class="line"><span>.idea/**/contentModel.xml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Sensitive or high-churn files</span></span>
<span class="line"><span>.idea/**/dataSources/</span></span>
<span class="line"><span>.idea/**/dataSources.ids</span></span>
<span class="line"><span>.idea/**/dataSources.local.xml</span></span>
<span class="line"><span>.idea/**/sqlDataSources.xml</span></span>
<span class="line"><span>.idea/**/dynamic.xml</span></span>
<span class="line"><span>.idea/**/uiDesigner.xml</span></span>
<span class="line"><span>.idea/**/dbnavigator.xml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Gradle</span></span>
<span class="line"><span>.idea/**/gradle.xml</span></span>
<span class="line"><span>.idea/**/libraries</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Gradle and Maven with auto-import</span></span>
<span class="line"><span># When using Gradle or Maven with auto-import, you should exclude module files,</span></span>
<span class="line"><span># since they will be recreated, and may cause churn.  Uncomment if using</span></span>
<span class="line"><span># auto-import.</span></span>
<span class="line"><span># .idea/artifacts</span></span>
<span class="line"><span># .idea/compiler.xml</span></span>
<span class="line"><span># .idea/jarRepositories.xml</span></span>
<span class="line"><span># .idea/modules.xml</span></span>
<span class="line"><span># .idea/*.iml</span></span>
<span class="line"><span># .idea/modules</span></span>
<span class="line"><span># *.iml</span></span>
<span class="line"><span># *.ipr</span></span>
<span class="line"><span></span></span>
<span class="line"><span># CMake</span></span>
<span class="line"><span>cmake-build-*/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Mongo Explorer plugin</span></span>
<span class="line"><span>.idea/**/mongoSettings.xml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># File-based project format</span></span>
<span class="line"><span>*.iws</span></span>
<span class="line"><span></span></span>
<span class="line"><span># IntelliJ</span></span>
<span class="line"><span>out/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># mpeltonen/sbt-idea plugin</span></span>
<span class="line"><span>.idea_modules/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># JIRA plugin</span></span>
<span class="line"><span>atlassian-ide-plugin.xml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Cursive Clojure plugin</span></span>
<span class="line"><span>.idea/replstate.xml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># SonarLint plugin</span></span>
<span class="line"><span>.idea/sonarlint/</span></span>
<span class="line"><span>.idea/sonarlint.xml # see https://community.sonarsource.com/t/is-the-file-idea-idea-idea-sonarlint-xml-intended-to-be-under-source-control/121119</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Crashlytics plugin (for Android Studio and IntelliJ)</span></span>
<span class="line"><span>com_crashlytics_export_strings.xml</span></span>
<span class="line"><span>crashlytics.properties</span></span>
<span class="line"><span>crashlytics-build.properties</span></span>
<span class="line"><span>fabric.properties</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Editor-based HTTP Client</span></span>
<span class="line"><span>.idea/httpRequests</span></span>
<span class="line"><span>http-client.private.env.json</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Android studio 3.1+ serialized cache file</span></span>
<span class="line"><span>.idea/caches/build_file_checksums.ser</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Apifox Helper cache</span></span>
<span class="line"><span>.idea/.cache/.Apifox_Helper</span></span>
<span class="line"><span>.idea/ApifoxUploaderProjectSetting.xml</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Cursor AI</span></span>
<span class="line"><span>.cursorignore</span></span>
<span class="line"><span>.cursorindexingignore</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Logs</span></span>
<span class="line"><span>logs</span></span>
<span class="line"><span>*.log</span></span>
<span class="line"><span>npm-debug.log*</span></span>
<span class="line"><span>yarn-debug.log*</span></span>
<span class="line"><span>yarn-error.log*</span></span>
<span class="line"><span>lerna-debug.log*</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Diagnostic reports (https://nodejs.org/api/report.html)</span></span>
<span class="line"><span>report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Runtime data</span></span>
<span class="line"><span>pids</span></span>
<span class="line"><span>*.pid</span></span>
<span class="line"><span>*.seed</span></span>
<span class="line"><span>*.pid.lock</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Directory for instrumented libs generated by jscoverage/JSCover</span></span>
<span class="line"><span>lib-cov</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Coverage directory used by tools like istanbul</span></span>
<span class="line"><span>coverage</span></span>
<span class="line"><span>*.lcov</span></span>
<span class="line"><span></span></span>
<span class="line"><span># nyc test coverage</span></span>
<span class="line"><span>.nyc_output</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)</span></span>
<span class="line"><span>.grunt</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Bower dependency directory (https://bower.io/)</span></span>
<span class="line"><span>bower_components</span></span>
<span class="line"><span></span></span>
<span class="line"><span># node-waf configuration</span></span>
<span class="line"><span>.lock-wscript</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Compiled binary addons (https://nodejs.org/api/addons.html)</span></span>
<span class="line"><span>build/Release</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Dependency directories</span></span>
<span class="line"><span>node_modules/</span></span>
<span class="line"><span>jspm_packages/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Snowpack dependency directory (https://snowpack.dev/)</span></span>
<span class="line"><span>web_modules/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># TypeScript cache</span></span>
<span class="line"><span>*.tsbuildinfo</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Optional npm cache directory</span></span>
<span class="line"><span>.npm</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Optional eslint cache</span></span>
<span class="line"><span>.eslintcache</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Optional stylelint cache</span></span>
<span class="line"><span>.stylelintcache</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Optional REPL history</span></span>
<span class="line"><span>.node_repl_history</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Output of &#39;npm pack&#39;</span></span>
<span class="line"><span>*.tgz</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Yarn Integrity file</span></span>
<span class="line"><span>.yarn-integrity</span></span>
<span class="line"><span></span></span>
<span class="line"><span># dotenv environment variable files</span></span>
<span class="line"><span>.env</span></span>
<span class="line"><span>.env.*</span></span>
<span class="line"><span>!.env.example</span></span>
<span class="line"><span></span></span>
<span class="line"><span># parcel-bundler cache (https://parceljs.org/)</span></span>
<span class="line"><span>.cache</span></span>
<span class="line"><span>.parcel-cache</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Next.js build output</span></span>
<span class="line"><span>.next</span></span>
<span class="line"><span>out</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Nuxt.js build / generate output</span></span>
<span class="line"><span>.nuxt</span></span>
<span class="line"><span>dist</span></span>
<span class="line"><span>.output</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Gatsby files</span></span>
<span class="line"><span>.cache/</span></span>
<span class="line"><span># Comment in the public line in if your project uses Gatsby and not Next.js</span></span>
<span class="line"><span># https://nextjs.org/blog/next-9-1#public-directory-support</span></span>
<span class="line"><span># public</span></span>
<span class="line"><span></span></span>
<span class="line"><span># vuepress build output</span></span>
<span class="line"><span>.vuepress/dist</span></span>
<span class="line"><span></span></span>
<span class="line"><span># vuepress v2.x temp and cache directory</span></span>
<span class="line"><span>.temp</span></span>
<span class="line"><span>.cache</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Sveltekit cache directory</span></span>
<span class="line"><span>.svelte-kit/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># vitepress build output</span></span>
<span class="line"><span>**/.vitepress/dist</span></span>
<span class="line"><span></span></span>
<span class="line"><span># vitepress cache directory</span></span>
<span class="line"><span>**/.vitepress/cache</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Docusaurus cache and generated files</span></span>
<span class="line"><span>.docusaurus</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Serverless directories</span></span>
<span class="line"><span>.serverless/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># FuseBox cache</span></span>
<span class="line"><span>.fusebox/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># DynamoDB Local files</span></span>
<span class="line"><span>.dynamodb/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Firebase cache directory</span></span>
<span class="line"><span>.firebase/</span></span>
<span class="line"><span></span></span>
<span class="line"><span># TernJS port file</span></span>
<span class="line"><span>.tern-port</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Stores VSCode versions used for testing VSCode extensions</span></span>
<span class="line"><span>.vscode-test</span></span>
<span class="line"><span></span></span>
<span class="line"><span># yarn v3</span></span>
<span class="line"><span>.pnp.*</span></span>
<span class="line"><span>.yarn/*</span></span>
<span class="line"><span>!.yarn/patches</span></span>
<span class="line"><span>!.yarn/plugins</span></span>
<span class="line"><span>!.yarn/releases</span></span>
<span class="line"><span>!.yarn/sdks</span></span>
<span class="line"><span>!.yarn/versions</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Vite logs files</span></span>
<span class="line"><span>vite.config.js.timestamp-*</span></span>
<span class="line"><span>vite.config.ts.timestamp-*</span></span></code></pre></div>`,2)])])}const h=n(e,[["render",i]]);export{m as __pageData,h as default};
