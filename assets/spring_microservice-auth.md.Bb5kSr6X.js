import{_ as e,c as o,o as r,af as t}from"./chunks/framework.CkW8_0d0.js";const b=JSON.parse('{"title":"微服务项目中鉴权逻辑和分工","description":"","frontmatter":{},"headers":[],"relativePath":"spring/microservice-auth.md","filePath":"spring/microservice-auth.md","lastUpdated":1760422497000}'),i={name:"spring/microservice-auth.md"};function l(h,a,n,d,s,c){return r(),o("div",null,[...a[0]||(a[0]=[t('<h1 id="微服务项目中鉴权逻辑和分工" tabindex="-1">微服务项目中鉴权逻辑和分工 <a class="header-anchor" href="#微服务项目中鉴权逻辑和分工" aria-label="Permalink to &quot;微服务项目中鉴权逻辑和分工&quot;">​</a></h1><p>在企业级微服务架构中，遵循“职责分离”原则，安全逻辑被清晰地划分到不同层次的服务中。</p><h2 id="一、api-网关" tabindex="-1">一、API 网关 <a class="header-anchor" href="#一、api-网关" aria-label="Permalink to &quot;一、API 网关&quot;">​</a></h2><h3 id="定位" tabindex="-1">定位 <a class="header-anchor" href="#定位" aria-label="Permalink to &quot;定位&quot;">​</a></h3><p>统一流量入口，边界“安检员”。</p><h3 id="核心职责" tabindex="-1">核心职责 <a class="header-anchor" href="#核心职责" aria-label="Permalink to &quot;核心职责&quot;">​</a></h3><h4 id="路由与横切" tabindex="-1">路由与横切 <a class="header-anchor" href="#路由与横切" aria-label="Permalink to &quot;路由与横切&quot;">​</a></h4><p>负责路由转发、负载均衡、全局跨域、限流熔断。</p><h4 id="粗粒度认证" tabindex="-1">粗粒度认证 <a class="header-anchor" href="#粗粒度认证" aria-label="Permalink to &quot;粗粒度认证&quot;">​</a></h4><ul><li><strong>做什么</strong>：校验请求是否携带 Token，并对 Token 进行基础有效性验证（如格式、签名、有效期）。它是第一道防线，快速过滤掉大量非法请求。</li><li><strong>不做什么</strong>：不处理登录逻辑，不颁发 Token，不关心用户具体拥有哪些业务权限。</li></ul><h4 id="白名单管理" tabindex="-1">白名单管理 <a class="header-anchor" href="#白名单管理" aria-label="Permalink to &quot;白名单管理&quot;">​</a></h4><p>放行登录、注册、文档等无需鉴权的公共 API。</p><h4 id="上下文透传" tabindex="-1">上下文透传 <a class="header-anchor" href="#上下文透传" aria-label="Permalink to &quot;上下文透传&quot;">​</a></h4><p>解析 Token 后，可将用户 ID 等基础信息放入请求头，传递给下游服务。</p><h2 id="二、认证中心" tabindex="-1">二、认证中心 <a class="header-anchor" href="#二、认证中心" aria-label="Permalink to &quot;二、认证中心&quot;">​</a></h2><h3 id="定位-1" tabindex="-1">定位 <a class="header-anchor" href="#定位-1" aria-label="Permalink to &quot;定位&quot;">​</a></h3><p>身份的集中“签发与管理机构”。</p><h3 id="核心职责-1" tabindex="-1">核心职责 <a class="header-anchor" href="#核心职责-1" aria-label="Permalink to &quot;核心职责&quot;">​</a></h3><h4 id="身份认证" tabindex="-1">身份认证 <a class="header-anchor" href="#身份认证" aria-label="Permalink to &quot;身份认证&quot;">​</a></h4><p>处理用户的登录、注册、登出请求。</p><h4 id="凭证管理" tabindex="-1">凭证管理 <a class="header-anchor" href="#凭证管理" aria-label="Permalink to &quot;凭证管理&quot;">​</a></h4><p><strong>颁发、刷新、吊销</strong>访问凭证（如 JWT）。是 Token 生命周期的唯一管理者。</p><h4 id="会话管理" tabindex="-1">会话管理 <a class="header-anchor" href="#会话管理" aria-label="Permalink to &quot;会话管理&quot;">​</a></h4><p>管理用户登录状态，例如通过 Redis 记录在线会话，以支持单点登录或强制下线等高级功能。</p><h4 id="配套功能" tabindex="-1">配套功能 <a class="header-anchor" href="#配套功能" aria-label="Permalink to &quot;配套功能&quot;">​</a></h4><p>提供验证码、密码策略、登录审计等与身份认证相关的功能。</p><h2 id="三、业务微服务" tabindex="-1">三、业务微服务 <a class="header-anchor" href="#三、业务微服务" aria-label="Permalink to &quot;三、业务微服务&quot;">​</a></h2><h3 id="定位-2" tabindex="-1">定位 <a class="header-anchor" href="#定位-2" aria-label="Permalink to &quot;定位&quot;">​</a></h3><p>业务权限的“最终决策者”。</p><h3 id="核心职责-2" tabindex="-1">核心职责 <a class="header-anchor" href="#核心职责-2" aria-label="Permalink to &quot;核心职责&quot;">​</a></h3><h4 id="细粒度授权" tabindex="-1">细粒度授权 <a class="header-anchor" href="#细粒度授权" aria-label="Permalink to &quot;细粒度授权&quot;">​</a></h4><ul><li><strong>必须</strong>对接收到的请求再次校验 Token 的合法性，<strong>绝不</strong>盲目信任网关透传的任何用户信息。</li><li>基于自身业务逻辑，结合 RBAC（角色-权限）模型，判断当前用户是否有权执行特定操作或访问特定资源。</li><li>实现数据权限等更复杂的安全控制。</li></ul><h2 id="协作流程示意" tabindex="-1">协作流程示意 <a class="header-anchor" href="#协作流程示意" aria-label="Permalink to &quot;协作流程示意&quot;">​</a></h2><ol><li><strong>登录</strong>：<code>用户</code> -&gt; <code>网关 (白名单放行)</code> -&gt; <code>认证中心 (校验凭证, 颁发 Token)</code> -&gt; <code>用户</code>。</li><li><strong>访问受保护资源</strong>：<code>用户 (携带 Token)</code> -&gt; <code>网关 (粗略校验 Token)</code> -&gt; <code>业务微服务 (再次校验 Token 并进行权限判定)</code> -&gt; <code>返回结果</code>。</li></ol>',34)])])}const q=e(i,[["render",l]]);export{b as __pageData,q as default};
